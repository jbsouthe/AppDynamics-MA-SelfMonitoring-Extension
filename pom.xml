<project>
    <modelVersion>4.0.0</modelVersion>

    <properties>
        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyyMMdd</maven.build.timestamp.format>
        <plugin-version>1.0</plugin-version>
        <project.java.version>1.8</project.java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <groupId>com.cisco.josouthe</groupId>
    <artifactId>MASelfMonitorExtension</artifactId>
    <version>${plugin-version}-${timestamp}</version>
    <!-- <packaging>jar</packaging>  -->


    <dependencies>
        <dependency>
            <groupId>com.appdynamics</groupId>
            <artifactId>machineagent</artifactId><!-- the machineagent.jar file is needed for compilation and linking, but NOT runtime, since it is provided -->
            <version>21.9</version> <!-- i have this loaded in my local maven repo, you will need to load one as well, any recent version is fine -->
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.19.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.19.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>RELEASE</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>RELEASE</version>
            <scope>test</scope>
        </dependency>


    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <includes>
                        <include>**/*.class</include>
                    </includes>
                    <outputDirectory>${basedir}</outputDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                            <goal>build-classpath</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>

                            <!-- These properties are for build-classpath. It creates a classpath for the copied
                                 dependencies and puts it in the ${distro.classpath} property. The jar Class-Path
                                 uses spaces as separators. Unfortunately <pathSeparator> configuration property
                                 does not work with a space as value, so the pathSeparator is set to a character
                                 here and this is then replaced later using the regex-property plugin. -->
                            <prefix>lib</prefix>
                            <outputProperty>distro.classpath</outputProperty>
                            <pathSeparator>:</pathSeparator>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <configuration>
                            <!-- Here the value of property for the jar the Class-Path is replaced to have a space
                                 as separator. Unfortunately <replacement> does not work if a single space if specified
                                 so this uses the surrounding .jar and lib to provide some content. -->
                            <name>distro.classpath.replaced</name>
                            <value>${distro.classpath}</value>
                            <regex>[.]jar[:]lib</regex>
                            <replacement>.jar lib</replacement>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <includes>
                        <include>**/*</include>
                    </includes>
                    <outputDirectory>${basedir}</outputDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptor>assembly-deployment.xml</descriptor>
                    <finalName>appdynamics-MASelfMonitor-extension-${pom.version}</finalName>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
